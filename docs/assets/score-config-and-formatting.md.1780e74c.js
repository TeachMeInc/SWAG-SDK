import{_ as t,o as e,c as a,U as r}from"./chunks/framework.314b2323.js";const h=JSON.parse('{"title":"Score Configuration","description":"","frontmatter":{},"headers":[],"relativePath":"score-config-and-formatting.md","filePath":"score-config-and-formatting.md"}'),o={name:"score-config-and-formatting.md"},s=r(`<h1 id="score-configuration" tabindex="-1">Score Configuration <a class="header-anchor" href="#score-configuration" aria-label="Permalink to &quot;Score Configuration&quot;">​</a></h1><p>Each type of score for your game can be configured individually. Expressed in JSON, a score configuration is in the following format:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  game: String,</span></span>
<span class="line"><span style="color:#A6ACCD;">  name: String,</span></span>
<span class="line"><span style="color:#A6ACCD;">  level_key: String,</span></span>
<span class="line"><span style="color:#A6ACCD;">  value_name: String,</span></span>
<span class="line"><span style="color:#A6ACCD;">  value_type: String,</span></span>
<span class="line"><span style="color:#A6ACCD;">  value_formatter: String,</span></span>
<span class="line"><span style="color:#A6ACCD;">  order: Number,</span></span>
<span class="line"><span style="color:#A6ACCD;">  reverse: Boolean,</span></span>
<span class="line"><span style="color:#A6ACCD;">  mode: String</span></span>
<span class="line"><span style="color:#A6ACCD;">}</span></span></code></pre></div><table><thead><tr><th>attribute</th><th>required</th><th>default</th><th>type</th><th>description</th></tr></thead><tbody><tr><td>game</td><td>y</td><td>-</td><td>String</td><td>api key of your game</td></tr><tr><td>name</td><td>y</td><td>-</td><td>String</td><td>Display name for the score <em>eg. &#39;Level 1&#39;</em></td></tr><tr><td>level_key</td><td>y</td><td>-</td><td>String</td><td>reference key for this level <em>eg. &#39;level1&#39;</em></td></tr><tr><td>value_name</td><td>n</td><td>-</td><td>String</td><td>Name for the score values <em>eg. &#39;Fastest Time&#39;</em></td></tr><tr><td>value_type</td><td>n</td><td>&quot;number&quot;</td><td>String</td><td>The type of value (number, time)</td></tr><tr><td>value_formatter</td><td>n</td><td>&quot;default&quot;</td><td>String</td><td>The type of formatter to use for this value (see Formatters)</td></tr><tr><td>order</td><td>n</td><td>-</td><td>Number</td><td>The display order of this level</td></tr><tr><td>reverse</td><td>n</td><td>false</td><td>Boolean</td><td>if true, minimum scores value are used for api score calculations</td></tr><tr><td>mode</td><td>n</td><td>&quot;default&quot;</td><td>String</td><td>Scores with mode of <code>first</code> will only display the first score for a day in the leaderboards</td></tr></tbody></table><p>These configurations are loaded into our highscore system to facilitate the specific needs of each type of score for your game.</p><h2 id="formatters" tabindex="-1">Formatters <a class="header-anchor" href="#formatters" aria-label="Permalink to &quot;Formatters&quot;">​</a></h2><p>Define a value_formatter in score configuration or as a parameter in api methods to format values.</p><h3 id="number-formatters" tabindex="-1">Number Formatters <a class="header-anchor" href="#number-formatters" aria-label="Permalink to &quot;Number Formatters&quot;">​</a></h3><p>No special number formatters are currently available. Let us know if there is a format you&#39;d like to see.</p><h3 id="time-formatters" tabindex="-1">Time Formatters <a class="header-anchor" href="#time-formatters" aria-label="Permalink to &quot;Time Formatters&quot;">​</a></h3><p>If using the time formatter you should submit your scores in milliseconds.</p><table><thead><tr><th>formatter</th><th>example output</th></tr></thead><tbody><tr><td>default</td><td>00:01:05.5</td></tr><tr><td>shortDuration</td><td>1m 5.5s</td></tr><tr><td>longDuration</td><td>1 minute, 5.5 seconds</td></tr><tr><td>seconds</td><td>65.5s</td></tr><tr><td>ms</td><td>65500</td></tr></tbody></table>`,12),n=[s];function d(i,l,c,p,m,u){return e(),a("div",null,n)}const g=t(o,[["render",d]]);export{h as __pageData,g as default};
