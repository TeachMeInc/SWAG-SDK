import{_ as s,o as a,c as e,V as t}from"./chunks/framework.e0f23486.js";const F=JSON.parse('{"title":"Usage & Examples","description":"","frontmatter":{},"headers":[],"relativePath":"html5/legacy/usage-and-examples.md","filePath":"html5/legacy/usage-and-examples.md"}'),o={name:"html5/legacy/usage-and-examples.md"},n=t(`<h1 id="usage-examples" tabindex="-1">Usage &amp; Examples <a class="header-anchor" href="#usage-examples" aria-label="Permalink to &quot;Usage &amp; Examples&quot;">​</a></h1><h2 id="connecting-to-the-api" tabindex="-1">Connecting to the API <a class="header-anchor" href="#connecting-to-the-api" aria-label="Permalink to &quot;Connecting to the API&quot;">​</a></h2><p>SWAGPI will be accessible as a global</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> api </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> SWAGAPI</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getInstance</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">wrapper</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> wrapper</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">api_key</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">5c6c3c056917a692f96f9651</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">theme</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">shockwave</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">debug</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="api-options" tabindex="-1">API Options <a class="header-anchor" href="#api-options" aria-label="Permalink to &quot;API Options&quot;">​</a></h3><table><thead><tr><th>option</th><th>type</th><th>description</th></tr></thead><tbody><tr><td>wrapper</td><td>domElement</td><td>the domElement containing the game</td></tr><tr><td>api_key</td><td>String</td><td>unique identifier for the game</td></tr><tr><td>theme</td><td>String</td><td>set the theme for api ui elements</td></tr><tr><td>debug</td><td>boolean</td><td>enable debug console messages</td></tr></tbody></table><p>The client must use the <code>startSession</code> method to start using the api and wait for the promise to resolve or the SESSION_READY event before using any other api calls.</p><p>Using promise:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">api</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">startSession</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#A6ACCD;">(</span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//do stuff</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>Using event listener:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">api</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">on</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">SESSION_READY</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//do stuff</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h2 id="using-the-api" tabindex="-1">Using the API <a class="header-anchor" href="#using-the-api" aria-label="Permalink to &quot;Using the API&quot;">​</a></h2><h3 id="session-methods" tabindex="-1">Session Methods <a class="header-anchor" href="#session-methods" aria-label="Permalink to &quot;Session Methods&quot;">​</a></h3><table><thead><tr><th>method</th><th>parameters</th><th>description</th><th>method result</th></tr></thead><tbody><tr><td>startSession</td><td>-</td><td>Used start an api session. The client must wait for the promise to resolve or the SESSION_READY event before using any other api calls.</td><td>Promise</td></tr><tr><td>startGame</td><td>-</td><td>Call this method before the player starts a game &quot;session&quot;</td><td>Promise</td></tr><tr><td>endGame</td><td>options</td><td>Call this method at the end of a player game &quot;session&quot;</td><td>Promise</td></tr></tbody></table><h3 id="end-game-options" tabindex="-1">End Game Options <a class="header-anchor" href="#end-game-options" aria-label="Permalink to &quot;End Game Options&quot;">​</a></h3><p>The endGame method accepts an options object which enables developers to submit custom metrics for a game session.</p><p>Example use cases:</p><p>Single level runner game (without win condition):</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">feet</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">134</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span></code></pre></div><p>Puzzle with countdown timer:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">success</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span></code></pre></div><p>Monster shooter with multiple types, tracking which enemy killed the player:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">werewolf</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">4</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">gargoyle</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">ghoul</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">12</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> </span><span style="color:#FFCB6B;">killedBy</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">ghoul</span><span style="color:#89DDFF;">&quot;</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="start-and-end-game-usage" tabindex="-1">Start and End Game Usage <a class="header-anchor" href="#start-and-end-game-usage" aria-label="Permalink to &quot;Start and End Game Usage&quot;">​</a></h2><p>The startGame and endGame methods are intended to be used at the start and end of a game session.</p><p>This will enable game developers to view game metrics like average session time and number of play sessions in the developer dashboard.</p><p>The API may display UI elements when these methods are invoked such as interstitial ads or site promotions. When the display of these UI elements has completed, the promise will resolve.</p><p>Example use case of startGame:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">- Player uses a start button</span></span>
<span class="line"><span style="color:#A6ACCD;">- startGame() method is invoked and returns a promise</span></span>
<span class="line"><span style="color:#A6ACCD;">- when the promise is resolved, game play starts</span></span></code></pre></div><p>Example use case of endGame:</p><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">- Player is defeated in a game</span></span>
<span class="line"><span style="color:#A6ACCD;">- endGame() method is invoked and returns a promise</span></span>
<span class="line"><span style="color:#A6ACCD;">- when the promise is resolved, game displays a retry button</span></span></code></pre></div><h2 id="score-methods" tabindex="-1">Score Methods <a class="header-anchor" href="#score-methods" aria-label="Permalink to &quot;Score Methods&quot;">​</a></h2><table><thead><tr><th>method</th><th>parameters</th><th>description</th><th>method result</th></tr></thead><tbody><tr><td>getScoreCategories</td><td>-</td><td>Returns a json array of highscore categories associated with this game</td><td>Promise, resolves json</td></tr><tr><td>getScores</td><td>see getScores options</td><td>Returns a json array of scores based on the options objects</td><td>Promise, resolves json</td></tr><tr><td>postScore</td><td>level_key, value, options</td><td>Post the score <code>value</code> for the <code>level_key</code> for the current user.</td><td>Promise</td></tr><tr><td>postDailyScore</td><td>day, level_key, value</td><td>Post the score <code>value</code> for the <code>level_key</code> and <code>day</code> for the current user.</td><td>Promise</td></tr></tbody></table><h2 id="score-methods-options" tabindex="-1">Score Methods Options <a class="header-anchor" href="#score-methods-options" aria-label="Permalink to &quot;Score Methods Options&quot;">​</a></h2><h3 id="postscore-options" tabindex="-1">postScore Options <a class="header-anchor" href="#postscore-options" aria-label="Permalink to &quot;postScore Options&quot;">​</a></h3><p>The following options are available:</p><table><thead><tr><th>option</th><th>type</th><th>description</th></tr></thead><tbody><tr><td>confirmation</td><td>boolean</td><td>If this option is included, api will display a confirmation dialog after the score is posted</td></tr><tr><td>meta</td><td>String</td><td>If this option is enabled for your score configuration, this meta data will be included with the score</td></tr></tbody></table><p>example:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">api</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">postScore</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">level_1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">400</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span><span style="color:#A6ACCD;"> </span><span style="color:#F07178;">confirmation</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="getscores-options" tabindex="-1">getScores Options <a class="header-anchor" href="#getscores-options" aria-label="Permalink to &quot;getScores Options&quot;">​</a></h3><p>The following options are available:</p><table><thead><tr><th>option</th><th>required</th><th>description</th></tr></thead><tbody><tr><td>level_key</td><td>yes</td><td>The level to retrieve scores for.</td></tr><tr><td>type</td><td>no</td><td>String, <em>default:</em> <code>&quot;standard&quot;</code>, <em>values:</em> <code>&quot;standard&quot;, &quot;weekly&quot;</code></td></tr><tr><td>period</td><td>no</td><td>String, <em>default:</em> <code>&quot;alltime&quot;</code>, <em>values:</em> <code>&quot;daily&quot;, &quot;weekly&quot;, &quot;monthly&quot;, &quot;alltime&quot;</code></td></tr><tr><td>current_user</td><td>no</td><td>boolean, <em>default:</em> <code>false</code>. If true, only get scores for current user</td></tr><tr><td>target_date</td><td>no</td><td>epoch time or ISO Date string in format YYYY-MM-DD. Use this date as the base for date ranges eg. &quot;daily&quot;, &quot;weekly&quot;</td></tr><tr><td>use_daily</td><td>no</td><td>boolean, use score &#39;day&#39; instead of score post date</td></tr><tr><td>value_formatter</td><td>no</td><td>Format scores using specified formatter</td></tr></tbody></table><p>Example (scores this week on level1 for the current user):</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> api</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">getScores</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">type</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">weekly</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">level_key</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">level1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">current_user</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#A6ACCD;">(</span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">scores</span><span style="color:#89DDFF;">)</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//do stuff</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h2 id="ui-methods" tabindex="-1">UI Methods <a class="header-anchor" href="#ui-methods" aria-label="Permalink to &quot;UI Methods&quot;">​</a></h2><table><thead><tr><th>method</th><th>parameters</th><th>description</th><th>method result</th></tr></thead><tbody><tr><td>showDialog</td><td>type</td><td>display a dialog of type <code>scores</code>, <code>dailyscores</code> <code>achievements</code> or <code>weeklyscores</code> (see dialog options for more information)</td><td>-</td></tr><tr><td>showAd</td><td>-</td><td>Displays an ad</td><td>Promise</td></tr></tbody></table><h3 id="showdialog-options" tabindex="-1">showDialog Options <a class="header-anchor" href="#showdialog-options" aria-label="Permalink to &quot;showDialog Options&quot;">​</a></h3><p>example:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">api</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">showDialog</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">scores</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">title</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">Best Scores</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">level_key</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">level1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">period</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">alltime</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#F07178;">value_formatter</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>The following options are available:</p><table><thead><tr><th>option</th><th>description</th></tr></thead><tbody><tr><td>title</td><td>Overrides the title in the dialog</td></tr><tr><td>level_key</td><td>Sets the default level_key in the select</td></tr><tr><td>period</td><td>Sets the default period in the select</td></tr><tr><td>value_formatter</td><td>Overrides the formatter used in the score config</td></tr></tbody></table><h2 id="achievement-methods" tabindex="-1">Achievement Methods <a class="header-anchor" href="#achievement-methods" aria-label="Permalink to &quot;Achievement Methods&quot;">​</a></h2><table><thead><tr><th>method</th><th>parameters</th><th>description</th><th>method result</th></tr></thead><tbody><tr><td>getAchievementCategories</td><td>-</td><td>Return a json array of achievements associated with this game</td><td>Promise, resolves json</td></tr><tr><td>postAchievement</td><td>achievement_key</td><td>Post an achievement <code>achievement_key</code> for the current user</td><td>Promise</td></tr><tr><td>getUserAchievements</td><td>-</td><td>Return a list of all achievements by the current user for this game</td><td>Promise, resolves json</td></tr></tbody></table><h2 id="data-store-methods" tabindex="-1">Data Store Methods <a class="header-anchor" href="#data-store-methods" aria-label="Permalink to &quot;Data Store Methods&quot;">​</a></h2><table><thead><tr><th>method</th><th>parameters</th><th>description</th><th>method result</th></tr></thead><tbody><tr><td>postDatastore</td><td>key, value</td><td>Post a <code>value</code> to <code>key</code>. If &#39;key&#39; exists for this user, it will be overwritten.</td><td>Promise</td></tr><tr><td>getUserDatastore</td><td>-</td><td>Returns a json array of all data store objects associated with this user</td><td>Promise</td></tr></tbody></table><h2 id="miscellaneous-methods" tabindex="-1">Miscellaneous Methods <a class="header-anchor" href="#miscellaneous-methods" aria-label="Permalink to &quot;Miscellaneous Methods&quot;">​</a></h2><table><thead><tr><th>method</th><th>parameters</th><th>description</th><th>method result</th></tr></thead><tbody><tr><td>isSubscriber</td><td>-</td><td>returns true if the current user is a subscriber</td><td>Promise, resolves Boolean</td></tr><tr><td>hasDailyScore</td><td>level_key</td><td>returns true if the current user has submitted a score today</td><td>Promise, resolves Boolean</td></tr><tr><td>getCurrentDay</td><td>-</td><td>returns the current &quot;day&quot; used by the api (PST timezone). format: <code>{&quot;day&quot;:&quot;2019-05-09&quot;}</code>. If the url parameters <code>day</code>, <code>month</code>, and <code>year</code> are present, this method will return this date rather than the current date. eg. <code>day=04&amp;month=07&amp;year=19</code></td><td>Promise, resolves json</td></tr></tbody></table><h2 id="branding-methods" tabindex="-1">Branding Methods <a class="header-anchor" href="#branding-methods" aria-label="Permalink to &quot;Branding Methods&quot;">​</a></h2><table><thead><tr><th>method</th><th>parameters</th><th>description</th><th>method result</th></tr></thead><tbody><tr><td>getBrandingLogo</td><td>-</td><td>returns an HTMLImageElement of the appropriate site logo</td><td>Promise, resolves HTMLImageElement</td></tr><tr><td>getBrandingLogoUrl</td><td>-</td><td>returns the url of the appropriate site logo</td><td>Promise, resolves a string</td></tr><tr><td>SWAGAPI.showBrandingAnimation</td><td>elementid&lt;String&gt;, callback</td><td>displays a branding animation in the provided element id</td><td>Promise</td></tr></tbody></table><p>The method <code>SWAGAPI.showBrandingAnimation</code> can be used to display the branding animation before a game. Note this is a static method so it can be used independently of the API instance.</p><p>example:</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">SWAGAPI</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">showBrandingAnimation</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">game</span><span style="color:#89DDFF;">&#39;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">then</span><span style="color:#A6ACCD;">(</span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//display the game</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><p>example (using callback):</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">SWAGAPI</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">showBrandingAnimation</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">game</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">function</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">//display the game</span></span>
<span class="line"><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h4 id="leaderboard" tabindex="-1">Leaderboard <a class="header-anchor" href="#leaderboard" aria-label="Permalink to &quot;Leaderboard&quot;">​</a></h4><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">type</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">leaderboard</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">  </span><span style="color:#FFCB6B;">data</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> [</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> username</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">user1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> points</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">300</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> username</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">user1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span><span style="color:#F07178;"> points</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#F78C6C;">300</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;">...</span></span>
<span class="line"><span style="color:#F07178;">  ]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h4 id="lobby" tabindex="-1">Lobby <a class="header-anchor" href="#lobby" aria-label="Permalink to &quot;Lobby&quot;">​</a></h4><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">type</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">lobby</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">data</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> [</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> username</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">user1</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">{</span><span style="color:#F07178;"> username</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">user2</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">},</span></span>
<span class="line"><span style="color:#F07178;">      </span><span style="color:#89DDFF;">...</span></span>
<span class="line"><span style="color:#F07178;">    ]</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h4 id="default" tabindex="-1">Default <a class="header-anchor" href="#default" aria-label="Permalink to &quot;Default&quot;">​</a></h4><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#FFCB6B;">type</span><span style="color:#89DDFF;">:</span><span style="color:#F07178;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">default</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h2 id="api-events" tabindex="-1">API Events <a class="header-anchor" href="#api-events" aria-label="Permalink to &quot;API Events&quot;">​</a></h2><table><thead><tr><th>event</th><th>description</th></tr></thead><tbody><tr><td>SESSION_READY</td><td>The api is ready to use</td></tr><tr><td>ERROR</td><td>An api error has occurred</td></tr><tr><td>DIALOG_CLOSED</td><td>The active dialog has closed</td></tr></tbody></table><h2 id="demo" tabindex="-1">Demo <a class="header-anchor" href="#demo" aria-label="Permalink to &quot;Demo&quot;">​</a></h2><p>There is a simple demo of the api at:</p><p><a href="https://swagapi.shockwave.com/demo.html" target="_blank" rel="noreferrer">https://swagapi.shockwave.com/demo.html</a> (view source)</p>`,75),l=[n];function p(r,c,d,i,y,h){return a(),e("div",null,l)}const m=s(o,[["render",p]]);export{F as __pageData,m as default};
