import{_ as e,o as t,c as r,X as o}from"./chunks/framework.3ba33fba.js";const f=JSON.parse('{"title":"ScoresCurrentUser (Class)","description":"","frontmatter":{},"headers":[],"relativePath":"unity/script-reference/AddictingGames/Scores/ScoresCurrentUser.md","filePath":"unity/script-reference/AddictingGames/Scores/ScoresCurrentUser.md"}'),d={name:"unity/script-reference/AddictingGames/Scores/ScoresCurrentUser.md"},c=o('<h1 id="scorescurrentuser-class" tabindex="-1">ScoresCurrentUser (Class) <a class="header-anchor" href="#scorescurrentuser-class" aria-label="Permalink to &quot;ScoresCurrentUser (Class)&quot;">​</a></h1><p>Manages retrieving and recording scores for the currently logged-in user.</p><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="recordscore" tabindex="-1">RecordScore <a class="header-anchor" href="#recordscore" aria-label="Permalink to &quot;RecordScore&quot;">​</a></h3><p>Records the user&#39;s score for a particular game level.</p><table><thead><tr><th>Parameter</th><th>Description</th></tr></thead><tbody><tr><td><code>string levelKey</code></td><td>Key associated with the level for which the score is being recorded.</td></tr><tr><td><code>float score</code></td><td>The score value to be recorded.</td></tr><tr><td><code>System.Action onSuccess</code></td><td>Callback to execute upon successful recording of the score.</td></tr><tr><td><code>System.Action&lt;string&gt; onError</code></td><td>Callback to execute in case of an error.</td></tr></tbody></table><h3 id="getdailybest-overloaded" tabindex="-1">GetDailyBest (Overloaded) <a class="header-anchor" href="#getdailybest-overloaded" aria-label="Permalink to &quot;GetDailyBest (Overloaded)&quot;">​</a></h3><p>Retrieves the user&#39;s daily best score for a particular game level.</p><table><thead><tr><th>Parameter</th><th>Description</th></tr></thead><tbody><tr><td><code>string levelKey</code></td><td>Key associated with the level.</td></tr><tr><td><code>System.Action&lt;DailyBest&gt; onSuccess</code></td><td>Callback to execute upon successful retrieval of daily best score.</td></tr><tr><td><code>System.Action&lt;string&gt; onError</code></td><td>Callback to execute in case of an error.</td></tr></tbody></table><table><thead><tr><th>Parameter</th><th>Description</th></tr></thead><tbody><tr><td><code>string levelKey</code></td><td>Key associated with the level.</td></tr><tr><td><code>string valueFormatter</code></td><td>Formatter for the score value.</td></tr><tr><td><code>System.Action&lt;DailyBest&gt; onSuccess</code></td><td>Callback to execute upon successful retrieval of daily best score.</td></tr><tr><td><code>System.Action&lt;string&gt; onError</code></td><td>Callback to execute in case of an error.</td></tr></tbody></table><h3 id="getscores-overloaded" tabindex="-1">GetScores (Overloaded) <a class="header-anchor" href="#getscores-overloaded" aria-label="Permalink to &quot;GetScores (Overloaded)&quot;">​</a></h3><p>Retrieves the user&#39;s scores for the specified level and period.</p><table><thead><tr><th>Parameter</th><th>Description</th></tr></thead><tbody><tr><td><code>string levelKey</code></td><td>Key associated with the level.</td></tr><tr><td><code>ScorePeriod period</code></td><td>Time period for which the scores are to be retrieved.</td></tr><tr><td><code>System.Action&lt;List&lt;Score&gt;&gt; onSuccess</code></td><td>Callback to execute upon successful retrieval of scores.</td></tr><tr><td><code>System.Action&lt;string&gt; onError</code></td><td>Callback to execute in case of an error.</td></tr></tbody></table><table><thead><tr><th>Parameter</th><th>Description</th></tr></thead><tbody><tr><td><code>string levelKey</code></td><td>Key associated with the level.</td></tr><tr><td><code>ScorePeriod period</code></td><td>Time period for which the scores are to be retrieved.</td></tr><tr><td><code>string valueFormatter</code></td><td>Formatter for the score value.</td></tr><tr><td><code>System.Action&lt;List&lt;Score&gt;&gt; onSuccess</code></td><td>Callback to execute upon successful retrieval of scores.</td></tr><tr><td><code>System.Action&lt;string&gt; onError</code></td><td>Callback to execute in case of an error.</td></tr></tbody></table>',14),a=[c];function s(l,i,n,h,u,b){return t(),r("div",null,a)}const m=e(d,[["render",s]]);export{f as __pageData,m as default};
